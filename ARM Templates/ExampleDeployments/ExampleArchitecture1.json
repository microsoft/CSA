{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentPrefix": {
      "type": "string",
      "defaultValue": "poc"
    },
    "resourceGroup": {
      "type": "string",
      "defaultValue": "testarm"
    },
    "addressRange": {
      "type": "String",
      "defaultValue":"192.168.1.0/24",
      "metadata": {
        "description": "Administrator password for the local admin account"
      }
    },
    "subnets": {
      "type": "array",
      "defaultValue": [
        "apim-SN|192.168.1.224/28",
        "aks-SN|192.168.1.0/25",
        "privateep-SN|192.168.1.176/28",
        "shared-SN|192.168.1.160/28",
        "AzureBastionSubnet|192.168.1.128/28",
        "AppGW-SN|192.168.1.144/28"
      ]
    },
    "test": {
      "type": "string",
      "defaultValue": "allow-HealthProbe|Allow-AppGWHealth|Tcp|*|65200-65535|*|Allow|120|Inbound"
    },
    "appInsightsName": {
      "defaultValue": "wbpocapimai",
      "type": "string"
    },
    "apimname": {
      "type": "String",
      "defaultValue": "wbpocAPPapim"
    },
    "apimsku": {
      "type": "string",
      "defaultValue": "Developer"
    },
    "apimcapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "apimEmail": {
      "type": "string",
      "defaultValue": "bwatts@microsoft.com"
    },
    "apimPublisherName": {
      "type": "string",
      "defaultValue": "POC APIM Deployment"
    },
    "APIMVirtualNetworkType": {
      "type": "string",
      "defaultValue": "Internal"
    },
    "apimDisableGateway": {
      "type": "bool",
      "defaultValue": false
    },
    "appgwtier": {
      "type": "string",
      "defaultValue": "WAF_v2"
    },
    "appgwskuSize": {
        "type": "string",
        "defaultValue": "WAF_v2"
    },
    "appgwzones": {
        "type": "array",
        "defaultValue": [
                "1",
                "2",
                "3"
        ]
    },
    "appgwMinCapacity": {
        "type": "int",
        "defaultValue": 1
    },
    "appgwMaxCapacity": {
        "type": "int",
        "defaultValue": 3
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "Lab"
    },
    "certificates": {
      "type": "array",
      "defaultValue": [
        "ARMCert|ARM/df47f485ecb1455d98eae9a950af6f47",
        "ARM2Cert|ARM2/b5e5e9c31a034bffa8387ef38754333f"
      ]
    },
    "keyVaultSecretName": {
      "type": "string",
      "defaultValue": "pocsecret"
    },
    "keyVaultContentType": {
      "type": "string",
      "defaultValue": "text/plain"
    },
    "keyVaultSecretValue": {
      "type": "string",
      "defaultValue": "secretvalue"
    },
    "bastionHostName": {
      "type": "string",
      "defaultValue": "wbpocdemobastion"
    },
    "ubuntuName": {
      "type": "string",
      "defaultValue": "wbpocubuntu"
    },
    "ubuntuSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "jumpName": {
      "type": "string",
      "defaultValue": "wbpocdemojump"
    },
    "jumpSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "jumpAdmin"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "ABCabc1234"
    },
    "jumpSKU": {
      "type": "string",
      "defaultValue": "2019-Datacenter"
    },
    "gw_zone_name": {
      "type": "string",
      "defaultValue": "azure-api.net"
    },
    "dev_zone_name": {
      "type": "string",
      "defaultValue": "developer.azure-api.net"
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "wbpocmonitoringla"
    },
    "saname": {
      "type": "string",
      "defaultValue": "wbpocinspiresa"
    },
    "vaultName": {
      "type": "string",
      "defaultValue": "wbpocinspirekv"
    },
    "acrName": {
      "type": "string",
      "defaultValue": "wbpocinspireacr"
    },
    "sbName": {
      "type": "string",
      "defaultValue": "wbpocinspiresb"
    },
    "cacheName": {
      "type": "string",
      "defaultValue": "wbpocinspirecache"
    },
    "AksresourceName": {
      "type": "string",
      "defaultValue": "wbaksprivate"
    },
    "nodeResourceGroup": {
      "type": "string",
      "defaultValue": "wbaksresources"
    },
    "dnsPrefix": {
        "type": "string",
        "defaultValue": "wbaksprivate-dns"
    },
    "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.15.11"
    },
    "networkPlugin": {
        "type": "string",
        "defaultValue": "kubenet"
    },
    "enableRBAC": {
        "type": "bool",
        "defaultValue": true
    },
    "vmssNodePool": {
        "type": "bool",
        "defaultValue": true
    },
    "windowsProfile": {
        "type": "bool",
        "defaultValue": false
    },
    "enablePrivateCluster": {
        "type": "bool",
        "defaultValue": true
    },
    "enableHttpApplicationRouting": {
        "type": "bool",
        "defaultValue": true
    },
    "networkPolicy": {
        "type": "string",
        "defaultValue": "calico"
    },
    "serviceCidr": {
        "type": "string",
        "defaultValue": "10.0.0.0/24"
    },
    "dnsServiceIP": {
        "type": "string",
        "defaultValue": "10.0.0.10"
    },
    "dockerBridgeCidr": {
        "type": "string",
        "defaultValue": "172.17.0.1/24"
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "pocSqlServer"
    },
    "sqlDatabaseName": {
      "type": "string",
      "defaultValue": "pocDatabase"
    }
  },
  "variables": {
    "gitUri": "https://raw.githubusercontent.com/bwatts64/SoutheastCSA/master/ARM%20Templates/NestedTemplates",
    "deployVNETTemplateURL": "[concat(variables('gitUri'),'/VNet.json')]",
    "deployNSGTemplateURL": "[concat(variables('gitUri'),'/NSG-ExistingSubnet.json')]",
    "deployNSGEmptyTemplateURL": "[concat(variables('gitUri'),'/NSG-Empty-ExistingSubnet.json')]",
    "deployPublicIPTemplateURL": "[concat(variables('gitUri'),'/PublicIPAddress.json')]",
    "deployAppGWHTTPListenerTemplateURL": "[concat(variables('gitUri'),'/AppGWHTTPListener.json')]",
    "deployAppGWHTTPSListenerKVTemplateURL": "[concat(variables('gitUri'),'/AppGWHTTPSListenerKV.json')]",
    "createManagedIdentityTemplateURL": "[concat(variables('gitUri'),'/UserAssignedManagedIdentity.json')]",
    "deployKeyVaultAccessTemplate": "[concat(variables('gitUri'),'/KeyVaultAccessPolicy.json')]",
    "addKeyVaultSecretTemplate": "[concat(variables('gitUri'),'/KeyVaultSecret.json')]",
    "deployACRURL": "[concat(variables('gitUri'),'/ACR.json')]",
    "deployAPIMTemplateURL": "[concat(variables('gitUri'),'/APIM.json')]",
    "deployAzureCacheBusURL": "[concat(variables('gitUri'),'/AzureRedisCacheVNet.json')]",
    "addVMInsightsURL": "[concat(variables('gitUri'),'/EnableVMInsights.json')]",
    "getNICIPUrL": "[concat(variables('gitUri'),'/GetNicIP.json')]",
    "deployUbuntuServerTemplateURL": "[concat(variables('gitUri'),'/UbuntuVirtualMachine.json')]",
    "deployAzureAKSTemplateURL": "[concat(variables('gitUri'),'/AKSMICluster.json')]",
    "deployPrivateEndpointURL": "[concat(variables('gitUri'),'/PrivateEndpoint.json')]",
    "deployDNSZoneTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSZone.json')]",
    "deployDNSARecordTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSARecord.json')]",
    "deployStorageAccountTemplateURL": "[concat(variables('gitUri'),'/StorageAccount.json')]",
    "deployAzureSqlDbURL": "[concat(variables('gitUri'),'/SQLDB.json')]",
    "deployLogAnalyticsTemplateURL": "[concat(variables('gitUri'),'/Log_Analytics_Workspace.json')]",
    "deployAppGWDiagnosticsTemplateURL": "[concat(variables('gitUri'),'/AppGWDiagnostics.json')]",
    "deployKeyVaultTemplateURL": "[concat(variables('gitUri'),'/KeyVault.json')]",
    "saName": "[concat(toLower(parameters('deploymentPrefix')),'sa',toLower(uniqueString(parameters('resourceGroup'))))]",
    "laName": "[concat(parameters('deploymentPrefix'),'la',uniqueString(parameters('resourceGroup')))]",
    "vnetName": "[concat(parameters('deploymentPrefix'),'vnet',uniqueString(parameters('resourceGroup')))]",
    "applicationGatewayName": "[concat(parameters('deploymentPrefix'),'appgw',uniqueString(parameters('resourceGroup')))]",
    "keyVaultName": "labVaultwb"
  },
  "resources": [
    {
      "name": "deployLogAnalytics",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployLogAnalyticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceName": {
            "value": "[variables('laName')]"
          }
        }
      }
    },
    {
      "name": "deployVNET",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVNETTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vNETName": {
            "value": "[variables('vnetName')]"
          },
          "addressRange": {
            "value": "[parameters('addressRange')]"
          },
          "subnets": {
            "value": "[parameters('subnets')]"
          }
        }
      }
    },
    {
      "name": "deployAppGWNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "AppGW-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(concat(subscription().id,'/resourceGroups/', parameters('resourceGroup') , '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/AppGW-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "AppGW-NSG"
          },
          "securityRules": {
            "value": [
              "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
              "allow-443|Allow-SSL|Tcp|*|443|*|*|Allow|100|Inbound",
              "allow-8080|Allow-SSL|Tcp|*|8080|*|*|Allow|110|Inbound",
              "allow-HealthProbe|Allow-AppGWHealth|Tcp|*|65200-65535|*|*|Allow|120|Inbound"
            ]
          }
        }
      }
    },
    {
      "name": "deploySharedNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployVNET",
        "deployAppGWNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "Shared-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(concat(subscription().id,'/resourceGroups/', parameters('resourceGroup') , '/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/Shared-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "Shared-NSG"
          },
          "securityRules": {
            "value": [
              "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
              "allow-bastion|Allow-Bastion-Host|Tcp|*|*|192.168.1.144/28|*|Allow|100|Inbound"
            ]
          }
        }
      }
    },
    {
      "name": "deployAPIMNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployVNET",
        "deploySharedNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "APIM-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(concat(subscription().id,'/resourceGroups/',parameters('resourceGroup') ,'/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/APIM-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "APIM-NSG"
          },
          "securityRules": {
            "value": [
              "allow-443|Allow-SSL|Tcp|*|443|192.168.1.144/28|*|Allow|100|Inbound",
              "allow-mgmt-endpoint|Allow-Management|Tcp|*|3443|ApiManagement|VirtualNetwork|Allow|120|Inbound",
              "allow-azure-storage|Allow-Storage-Account|Tcp|*|443|VirtualNetwork|Storage|Allow|130|Outbound",
              "allow-azure-ad|Allow-Azure-AD|Tcp|*|443|VirtualNetwork|AzureActiveDirectory|Allow|140|Outbound",
              "allow-event-hub|Allow-EventHub|Tcp|*|5671-5672|VirtualNetwork|EventHub|Allow|150|Outbound",
              "allow-event-hub-443|Allow-EventHub|Tcp|*|443|VirtualNetwork|EventHub|Allow|155|Outbound",
              "allow-file-share|Allow-FileShare|Tcp|*|445|VirtualNetwork|Storage|Allow|160|Outbound",
              "allow-health-status|Allow-Health-Status|Tcp|*|1886|VirtualNetwork|AzureCloud|Allow|170|Outbound",
              "allow-azure-monitor|Allow-Azure-Monitor|Tcp|*|443|VirtualNetwork|AzureMonitor|Allow|180|Outbound",
              "allow-azure-cache-ob|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|190|Outbound",
              "allow-azure-cache-ib|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|200|Inbound",
              "allow-rate-limit-ib|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow|210|Inbound",
              "allow-rate-limit-ob|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow|220|Outbound",
              "deny-all-inbound|Deny All|Tcp|*|*|*|*|Deny|500|Inbound",
              "deny-all-outbound|Deny All|Tcp|*|*|*|*|Deny|500|Outbound"
            ]
          }
        }
      }
    },
    {
      "name": "deployAKSNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployVNET",
        "deployAPIMNSG"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGEmptyTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[variables('vnetName')]"
          },
          "subnetName": {
            "value": "AKS-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(concat(subscription().id,'/resourceGroups/',parameters('resourceGroup') ,'/providers/Microsoft.Network/virtualNetworks/', variables('vnetName'), '/subnets/AKS-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "AKS-NSG"
          }
        }
      }
    },
    {
      "name": "deployPublicIP1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPublicIPTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "publicIpAddressName": {
            "value": "[concat(variables('applicationGatewayName'),'pip1')]"
          },
          "sku": {
              "value": "Standard"
          },
          "allocationMethod": {
              "value": "Static"
          }
        }
      }
    },
    {
      "name": "createManagedIdentity",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('createManagedIdentityTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "identityName": {
              "value": "[concat(variables('applicationGatewayName'),'-identity')]"
          }
        }
      }
    },
    {
      "name": "deployKeyVaultAccess",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('keyVaultResourceGroup')]",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "createManagedIdentity"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployKeyVaultAccessTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
              "value": "[variables('keyVaultName')]"
          },
          "secrets": {
              "value": [
                  "Get",
                  "List",
                  "Set",
                  "Delete",
                  "Recover",
                  "Backup",
                  "Restore"
              ]
          },
          "objectId": {
              "value": "[reference('createManagedIdentity').outputs.principalId.value]"
          }
        }
      }
    }, 
    {
      "name": "deployAppGW",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployVNET",
        "deployPublicIP1"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAppGWHTTPSListenerKVTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "applicationGatewayName": {
              "value": "[variables('applicationGatewayName')]"
          },
          "tier": {
              "value": "[parameters('appgwtier')]"
          },
          "skuSize": {
              "value": "[parameters('appgwskuSize')]"
          },
          "minCapacity": {
              "value": "[parameters('appgwMinCapacity')]",
          },
          "maxCapacity": {
              "value": "[parameters('appgwMaxCapacity')]",
          },
          "zones": {
              "value": "[parameters('appgwzones')]"
          },
          "subnetID": {
              "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/AppGW-SN')]"
          },
          "publicIpAddressesIds": {
              "value": [
                "[concat('PIP1|',reference('deployPublicIP1').outputs.publicIPID.value )]"
              ]
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "identityID": {
              "value": "[reference('createManagedIdentity').outputs.resourceId.value]"
          },
          "certificates": {
              "value": "[parameters('certificates')]"
          },
          "frontendPorts": {
              "value": [
                "HTTPS-443|443",
                "HTTPS-8080|8080"
              ]
          },
          "backendAddresses": {
              "value": [
                "Example1-BEPool|bing.com",
                "Example2-BEPool|microsoft.com"
              ]
          },
          "backendHttpSettings": {
              "value": [
                "Example-App-HTTPSetting|80|Http|Disabled|30|/"
              ]
          },
          "httpListeners": {
              "value": [
                "Example1-App-Listener|PIP1|HTTPS-443",
                "Example2-App-Listener|PIP1|HTTPS-8080"
              ]
          },
          "requestRoutingRules": {
              "value": [
                "Example1-App-RoutingRule|Example1-App-Listener|Example1-BEPool|Example-App-HTTPSetting",
                "Example2-App-RoutingRule|Example2-App-Listener|Example2-BEPool|Example-App-HTTPSetting"
              ]
          }
        }
      }
    },
    {
      "name": "deployAppGWDiagnostics",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('resourceGroup')]",
      "dependsOn": [
        "deployAppGW",
        "deployLogAnalytics"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployAppGWDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "workspaceId": {
              "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
          },
          "logs": {
              "value": [
                "ApplicationGatewayAccessLog",
                "ApplicationGatewayPerformanceLog",
                "ApplicationGatewayFirewallLog"
              ]
          },
          "metrics": {
              "value": [
                "AllMetrics"
              ]
          }
        }
      }  
    },
    {
      "name": "deployStorageAccount",
      "comments":"",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('resourceGroup')]",
      "apiVersion": "2017-05-10",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployStorageAccountTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "saName": {
            "value": "[variables('saName')]"
          },
          "skuName": {
            "value": "Standard_LRS"
          },
          "skuTier": {
            "value": "Standard"
          }
        }
      }
    }
  ],
  "outputs": {
  }  
}