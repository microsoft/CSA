{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vNETName": {
      "type": "String",
      "defaultValue": "wbwpocTestVnet",
      "metadata": {
        "description": "Name of the virtual network to be created"
      }
    },
    "addressRange": {
      "type": "String",
      "defaultValue":"192.168.1.0/24",
      "metadata": {
        "description": "Administrator password for the local admin account"
      }
    },
    "subnets": {
      "type": "array",
      "defaultValue": [
        "apim-SN|192.168.1.224/28",
        "aks-SN|192.168.1.0/25",
        "privateep-SN|192.168.1.176/28",
        "shared-SN|192.168.1.160/28",
        "AzureBastionSubnet|192.168.1.128/28",
        "AppGW-SN|192.168.1.144/28"
      ]
    },
    "appInsightsName": {
      "defaultValue": "wbpocapimai",
      "type": "string"
    },
    "apimname": {
      "type": "String",
      "defaultValue": "wbpocAPPapim"
    },
    "apimsku": {
      "type": "string",
      "defaultValue": "Developer"
    },
    "apimcapacity": {
      "type": "int",
      "defaultValue": 1
    },
    "apimEmail": {
      "type": "string",
      "defaultValue": "bwatts@microsoft.com"
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "wbpocAPPappgw"
    },
    "appgwtier": {
      "type": "string",
      "defaultValue": "WAF_v2"
    },
    "appgwskuSize": {
        "type": "string",
        "defaultValue": "WAF_v2"
    },
    "appgwcapacity": {
        "type": "int",
        "defaultValue": 2
    },
    "appgwzones": {
        "type": "array",
        "defaultValue": [
                "1",
                "2",
                "3"
        ]
    },
    "appgwPIPName": {
        "type": "string",
        "defaultValue": "wbpocAPPappgw-pip"
    },
    "appgwsku": {
        "type": "string",
        "defaultValue": "Standard"
    },
    "appgwpublicIpZones": {
        "type": "array",
        "defaultValue": []
    },
    "appgwprivateIpAddress": {
        "type": "string",
        "defaultValue": "192.168.1.150"
    },
    "appgwautoScaleMaxCapacity": {
        "type": "int",
        "defaultValue": 4
    },
    "bastionHostName": {
      "type": "string",
      "defaultValue": "wbpocdemobastion"
    },
    "jumpName": {
      "type": "string",
      "defaultValue": "wbpocdemojump"
    },
    "jumpSize": {
      "type": "string",
      "defaultValue": "Standard_DS1_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "jumpAdmin"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "ABCabc1234"
    },
    "jumpSKU": {
      "type": "string",
      "defaultValue": "2019-Datacenter"
    },
    "gw_zone_name": {
      "type": "string",
      "defaultValue": "azure-api.net"
    },
    "dev_zone_name": {
      "type": "string",
      "defaultValue": "developer.azure-api.net"
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "wbpocmonitoringla"
    },
    "saname": {
      "type": "string",
      "defaultValue": "wbpocinspiresa"
    },
    "vaultName": {
      "type": "string",
      "defaultValue": "wbpocinspirekv"
    },
    "acrName": {
      "type": "string",
      "defaultValue": "wbpocinspireacr"
    },
    "sbName": {
      "type": "string",
      "defaultValue": "wbpocinspiresb"
    },
    "cacheName": {
      "type": "string",
      "defaultValue": "wbpocinspirecache"
    },
    "AksresourceName": {
      "type": "string",
      "defaultValue": "wbaksprivate"
    },
    "nodeResourceGroup": {
      "type": "string",
      "defaultValue": "wbaksresources"
    },
    "dnsPrefix": {
        "type": "string",
        "defaultValue": "wbaksprivate-dns"
    },
    "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.15.11"
    },
    "networkPlugin": {
        "type": "string",
        "defaultValue": "kubenet"
    },
    "enableRBAC": {
        "type": "bool",
        "defaultValue": true
    },
    "vmssNodePool": {
        "type": "bool",
        "defaultValue": true
    },
    "windowsProfile": {
        "type": "bool",
        "defaultValue": false
    },
    "enablePrivateCluster": {
        "type": "bool",
        "defaultValue": true
    },
    "enableHttpApplicationRouting": {
        "type": "bool",
        "defaultValue": true
    },
    "networkPolicy": {
        "type": "string",
        "defaultValue": "calico"
    },
    "serviceCidr": {
        "type": "string",
        "defaultValue": "10.0.0.0/24"
    },
    "dnsServiceIP": {
        "type": "string",
        "defaultValue": "10.0.0.10"
    },
    "dockerBridgeCidr": {
        "type": "string",
        "defaultValue": "172.17.0.1/24"
    }
  },
  "variables": {
    "gitUri": "https://raw.githubusercontent.com/microsoft/SoutheastCSA/master/ARM%20Templates/NestedTemplates",
    "gitToken": "?token=AHZUR2HL7OC45D4BODNJ5T266UOBW",
    "deployVNETTemplateURL": "[concat(variables('gitUri'),'/VNet.json',variables('gitToken'))]",
    "deployAppInsightsTemplateURL": "[concat(variables('gitUri'),'/ApplicationInsights.json')]",
    "deployAPIMTemplateURL": "[concat(variables('gitUri'),'/APIM.json')]",
    "deployAPPGWTemplateURL": "[concat(variables('gitUri'),'/AppGW.json')]",
    "deployAzureBastionTemplateURL": "[concat(variables('gitUri'),'/AzureBastion.json')]",
    "deployWindowsServerTemplateURL": "[concat(variables('gitUri'),'/WindowsVirtualMachine.json')]",
    "deployDNSZoneTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSZone.json')]",
    "deployLogAnalyticsURL": "[concat(variables('gitUri'),'/Log_Analytics_Workspace.json')]",
    "deployPrivateStorageURL": "[concat(variables('gitUri'),'/PrivateStorageAccount.json')]",
    "deployPrivateEndpointURL": "[concat(variables('gitUri'),'/PrivateEndpoint.json')]",
    "getNICIPURL": "[concat(variables('gitUri'),'/GetNicIP.json')]",
    "deployKeyVaultURL": "[concat(variables('gitUri'),'/KeyVault.json')]",
    "deployACRURL": "[concat(variables('gitUri'),'/ACR.json')]",
    "addVMInsightsURL": "[concat(variables('gitUri'),'/EnableVMInsights.json')]",
    "deployServiceBusURL": "[concat(variables('gitUri'),'/ServiceBus.json')]",
    "deployAzureCacheBusURL": "[concat(variables('gitUri'),'/AzureRedisCache.json')]",
    "deployAzureAKSTemplateURL": "[concat(variables('gitUri'),'/PrivateAKSMICluster.json')]",
    "deployNSGTemplateURL": "[concat(variables('gitUri'),'/NSG-ExistingSubnet.json?token=AHZUR2CV43ZHADAYUUF5AJS66UXEE')]"
  },
  "resources": [
    {
      "name": "deployVNET",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployVNETTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vNETName": {
            "value": "[parameters('vNETName')]"
          },
          "addressRange": {
            "value": "[parameters('addressRange')]"
          },
          "subnets": {
            "value": "[parameters('subnets')]"
          }
        }
      }
    },
    {
      "name": "deployAppGWNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('vNETName')]"
          },
          "subnetName": {
            "value": "AppGW-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vNETName'), 'AppGW-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "AppGW-NSG"
          },
          "securityRules": {
            "value": [
              "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
              "allow-443|Allow-SSL|Tcp|*|443|*|*|Allow|100|Inbound",
              "allow-8080|Allow-SSL|Tcp|*|8080|*|*|Allow|110|Inbound",
              "allow-HealthProve|Allow-AppGWHealth|Tcp|*|65200-65535|*|Allow|120|Inbound"
            ]
          }
        }
      }
    },
    {
      "name": "deploySharedNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('vNETName')]"
          },
          "subnetName": {
            "value": "Shared-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vNETName'), 'Shared-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "Shared-NSG"
          },
          "securityRules": {
            "value": [
              "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
              "allow-bastion|Allow-Bastion-Host|Tcp|*|*|192.168.1.144/28|*|Allow|100|Inbound"
            ]
          }
        }
      }
    },
    {
      "name": "deployAPIMNSG",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "deployVNET"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployNSGTemplateURL')]",
          "contentVersion": "1.0.0.1"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('vNETName')]"
          },
          "subnetName": {
            "value": "APIM-SN"
          },
          "subnetAddressPrefix": {
            "value": "[reference(resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('vNETName'), 'APIM-SN'), '2018-03-01').addressPrefix]"
          },
          "nsgName": {
            "value": "APIM-NSG"
          },
          "securityRules": {
            "value": [
              "allow-443|Allow-SSL|Tcp|*|443|192.168.1.144/28|*|Allow|100|Inbound",
              "allow-mgmt-endpoint|Allow-Management|Tcp|*|3443|ApiManagement|VirtualNetwork|Allow|120|Inbound",
              "allow-azure-storage|Allow-Storage-Account|Tcp|*|443|VirtualNetwork|Storage|Allow|130|Outbound",
              "allow-azure-ad|Allow-Azure-AD|Tcp|*|443|VirtualNetwork|AzureActiveDirectory|Allow|140|Outbound",
              "allow-event-hub|Allow-EventHub|Tcp|*|5671,5672,443|VirtualNetwork|EventHub|Allow|150|Outbound",
              "allow-file-share|Allow-FileShare|Tcp|*|445|VirtualNetwork|Storage|Allow|160|Outbound",
              "allow-health-status|Allow-Health-Status|Tcp|*|1886|VirtualNetwork|AzureCloud|Allow|170|Outbound",
              "allow-azure-monitor|Allow-Azure-Monitor|Tcp|*|443|VirtualNetwork|AzureMonitor|Allow|180|Outbound",
              "allow-azure-cache|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|190|Outbound",
              "allow-azure-cache|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|200|Inbound",
              "allow-rate-limit|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow-210-Inbound",
              "allow-rate-limit|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow-220-Outbound",
              "deny-all-inbound|Deny All|Tcp|*|*|*|*|Deny|500-Inbound",
              "deny-all-outbound|Deny All|Tcp|*|*|*|*|Deny|500-Outbound"
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    
  }
}